{"version":3,"sources":["_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","components/utils/ImagesSlider.js","components/views/LandingPage/Sections/CheckBox.js","components/views/LandingPage/Sections/Datas.js","components/views/LandingPage/Sections/RadioBox.js","components/views/LandingPage/Sections/SearchFeature.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/utils/FileUpload.js","components/views/UploadProductPage/UploadProductPage.js","components/views/DetailProductPage/Sections/ProductImage.js","components/views/DetailProductPage/Sections/ProductInfo.js","components/views/DetailProductPage/DetailProductPage.js","components/views/CartPage/Sections/UserCardBlock.js","components/views/CartPage/CartPage.js","components/views/Animal/Adetail.js","components/views/Animal/Information.js","components/views/Animal/Animals.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js","components/views/Animal/Information.module.css","components/views/Animal/Animals.module.css"],"names":["auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","ImagesSlider","autoplay","images","map","image","index","key","style","width","maxHeight","src","Panel","Collapse","CheckBox","useState","Checked","setChecked","defaultActiveKey","header","list","value","Fragment","onChange","currentIndex","indexOf","newChecked","splice","handleFilters","handleToggle","_id","checked","name","continents","price","RadioBox","Value","setValue","Group","event","target","Search","Input","SearchFeature","SearchTerm","setSearchTerm","placeholder","currentTarget","refreshFuntion","LandingPage","Products","setProducts","Skip","setSkip","Limit","PostSize","setPostSize","Filters","setFilters","getProducts","skip","limit","body","post","success","loadMore","productInfo","postSize","alert","renderCards","product","lg","md","xs","cover","href","title","filters","category","newFilters","priceValues","array","parseInt","handlePrice","showFilteredResults","margin","textAlign","gutter","display","justifyContent","newSearchTerm","searchTerm","onClick","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","loginUser","loginSuccess","window","setItem","userId","id","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","className","level","Item","prefix","color","onBlur","fontSize","border","padding","borderRadius","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","confirmPassword","oneOf","lastname","moment","unix","registerUser","errmsg","label","hasFeedback","validateStatus","SubMenu","Menu","ItemGroup","LeftMenu","mode","userData","paddingBottom","count","cart","length","marginRight","marginBottom","status","NavBar","visible","setVisible","position","zIndex","placement","closable","onClose","Footer","height","flexDirection","alignItems","FileUpload","Images","setImages","onDrop","files","formData","FormData","append","Axios","filePath","refreshFunction","getRootProps","getInputProps","overflowX","newImages","deleteHandler","TextArea","Continents","UploadProductPage","setTitle","Description","setDescription","Price","Continent","setContinent","submitHandler","preventDefault","writer","description","maxWidth","item","ProductImage","detail","original","thumbnail","items","ProductInfo","size","shpae","productId","addToCart","DetailProductPage","match","params","Product","setProduct","UserCardBlock","renderCartImage","products","alt","CartPage","setTotal","ShowTotal","setShowTotal","cartItems","forEach","userCart","cartItem","productDetail","quantity","getCartItems","calculateTotal","cartDetail","total","removeCartItem","marginTop","Adetail","useParams","animal","setAnimal","getAnimals","a","fetch","json","console","log","age","filename","kindCd","colorCd","Information","img","Edt","noticeNo","orgNm","careNm","happenDt","neuterYn","sexCd","careTel","special","weight","careAddr","add","setAdd","kakao","info","setInfo","markers","setMarkers","setMap","maps","services","Places","keywordSearch","_pagination","Status","OK","bounds","LatLngBounds","i","lat","y","lng","x","content","place_name","extend","LatLng","setBounds","styles","animal__img","center","onCreate","marker","button","Animals","loading","setLoading","container","loader","animals","desertionNo","popfile","noticeEdt","processState","specialMark","App","fallback","paddingTop","minHeight","basename","process","exact","path","component","Auth","LoginPage","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.6b17cf20.chunk.js","sourcesContent":["import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_CART,\n    GET_CART_ITEMS,\n    REMOVE_CART_ITEM\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\nexport function addToCart(id){ // 파라미터 아이디 넣어주기 \n\n    let body = {\n        productId : id \n    }\n\n    const request = axios.post(`${USER_SERVER}/addToCart`, body)\n        .then(response => response.data);\n\n    return {\n        type: ADD_TO_CART,\n        payload: request\n    }\n}\n\n\nexport function getCartItems(cartItems, userCart){ \n\n    const request = axios.get(`/api/product/products_by_id?id=${cartItems}&type=array`)\n        .then(response =>{\n            \n            // CartItem들에 해당하는 정보들을 \n            // Product Collection 에서 가져온 후에\n            // Quantity 정보를 넣어 준다.\n            \n            userCart.forEach(cartItem => {\n                \n                response.data.forEach((productDetail, index) => {\n\n                    if(cartItem.id === productDetail._id){\n                        response.data[index].quantity = cartItem.quantity\n                    }\n                })\n            })\n\n            return response.data;\n            // return을 해주면 reducer로 고고씽 \n\n        });\n\n    return {\n        type: GET_CART_ITEMS,\n        payload: request\n    }\n}\n\n\nexport function removeCartItem(productId){ \n\n    const request = axios.get(`/api/users/removeFromCart?id=${productId}`)\n        .then(response =>{\n            \n           // productInfo, cart 정보를 조합해서 CartDetail을 만든다.\n\n            response.data.cart.forEach(item => {\n                response.data.productInfo.forEach((product, index) => {\n                    if (item.id === product._id) {\n                        response.data.productInfo[index].quantity = item.quantity\n                    }\n                })\n           })\n            return response.data;\n        });\n\n    return {\n        type: REMOVE_CART_ITEM,\n        payload: request\n    }\n}\n\n\n","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\nexport const ADD_TO_CART = 'add_to_cart';\nexport const GET_CART_ITEMS = 'get_cart_items';\nexport const REMOVE_CART_ITEM = 'remove_cart_item';\n\n","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import React from 'react'\r\nimport { Icon, Col, Card, Row, Carousel } from 'antd';\r\n\r\nfunction ImagesSlider(props) {\r\n  return (\r\n      <div>\r\n        <Carousel autoplay>\r\n            {props.images.map((image, index) => (\r\n                <div key={index}>\r\n                    <img style={{ width: '100%', maxHeight: '150px' }}\r\n                        src={`http://localhost:5000/${image}`} />\r\n                </div>\r\n            ))}\r\n        </Carousel>\r\n      </div>\r\n      \r\n      \r\n      \r\n      /*\r\n      <div>\r\n          <Carousel autoplay >\r\n              {props.images.map((image, index) => (\r\n                    <div key={index}>\r\n                        <img style={{ width: '100%', maxHeight: '150px' }}\r\n                            src={`http://localhost:5000/${image}`} />\r\n                    </div>\r\n                ))}\r\n          </Carousel>\r\n      </div>\r\n      */\r\n  )\r\n}\r\n\r\nexport default ImagesSlider\r\n","import React, {useState} from 'react'\r\nimport { Collapse, Checkbox } from 'antd';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction CheckBox(props) {\r\n\r\n    const [Checked, setChecked] = useState([])\r\n\r\n    const handleToggle = (value) => {\r\n        // 누른 것의 Index를 구하고\r\n\r\n        const currentIndex = Checked.indexOf(value)        \r\n\r\n        // 전체 Checked 된 State에서 현재 누른 Checkbox가 이미 있다면\r\n\r\n        const newChecked = [...Checked];\r\n\r\n        // State 넣어준다.\r\n        if(currentIndex === -1){\r\n            newChecked.push(value)\r\n        // 빼주고\r\n        } else {\r\n            newChecked.splice(currentIndex, 1)\r\n        }\r\n        setChecked(newChecked)\r\n        props.handleFilters(newChecked)\r\n    }\r\n\r\n    const renderCheckboxLists = () => props.list && props.list.map((value, index) => (\r\n        <React.Fragment key={index}>\r\n            <Checkbox \r\n            onChange={() => handleToggle(value._id)} \r\n           type=\"checkbox\"\r\n            checked={Checked.indexOf(value._id) === -1 ? false : true }/>\r\n            &nbsp;&nbsp;\r\n            <span>{value.name}</span>\r\n            &nbsp;&nbsp;\r\n        </React.Fragment>\r\n    ))\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['0']}>\r\n                <Panel header=\"게시판\" key=\"1\">\r\n\r\n                {renderCheckboxLists()}\r\n\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckBox\r\n","const continents = [\r\n    { \r\n        \"_id\": 1,\r\n        \"name\": \"실종\"\r\n    },\r\n    {\r\n        \"_id\": 2,\r\n        \"name\": \"정보\"\r\n    },\r\n    {\r\n        \"_id\": 3,\r\n        \"name\": \"우리들의 이야기\"\r\n    },\r\n]\r\n\r\nconst price = [\r\n    {\r\n        \"_id\" : 0,\r\n        \"name\" : \"준비중\",\r\n        \"array\" : []\r\n    },\r\n    {\r\n        \"_id\" : 1,\r\n        \"name\" : \"준비중\",\r\n        \"array\" : [0, 199]\r\n    },\r\n    {\r\n        \"_id\" : 2,\r\n        \"name\" : \"준비중\",\r\n        \"array\" : [200, 249]\r\n    },\r\n   /*  {\r\n        \"_id\" : 3,\r\n        \"name\" : \"$250 to $279\",\r\n        \"array\" : [250, 279]\r\n    },\r\n    {\r\n        \"_id\" : 4,\r\n        \"name\" : \"$280 to $299\",\r\n        \"array\" : [280, 299]\r\n    },\r\n    {\r\n        \"_id\" : 5,\r\n        \"name\" : \"More than $300\",\r\n        \"array\" : [300, 1500000]\r\n    } */\r\n]\r\n\r\nexport {\r\n    continents,\r\n    price\r\n}","import React, {useState} from 'react'\r\nimport { Collapse, Radio } from 'antd';\r\n\r\nconst { Panel } = Collapse;\r\n\r\n\r\nfunction RadioBox(props) {\r\n\r\n    const [Value, setValue] = useState(0)\r\n\r\n    const renderRadioBox = () => (\r\n        props.list && props.list.map(value => (\r\n            <Radio key={value._id} value={value._id}> {value.name} </Radio>\r\n        ))\r\n    )\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n        props.handleFilters(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']}>\r\n                <Panel header=\"/\" key=\"0\">\r\n                    <Radio.Group onChange={handleChange} value={Value}>\r\n                        {renderRadioBox()}\r\n                    </Radio.Group>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadioBox\r\n","import React, { useState } from 'react'\r\nimport { Input } from 'antd';\r\n\r\nconst { Search } = Input;\r\n\r\nfunction SearchFeature(props) {\r\n\r\n    const [SearchTerm, setSearchTerm ] = useState(\"\")\r\n\r\n    const searchHandler = (event) => {\r\n        setSearchTerm(event.currentTarget.value)\r\n        props.refreshFuntion(event.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Search\r\n                placeholder=\"input search text\"\r\n                onChange={searchHandler}\r\n                style={{ width: 200 }}\r\n                value={SearchTerm}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchFeature\r\n","import { Icon, Col, Card, Row, Carousel } from 'antd';\nimport React, { useEffect, useState } from 'react'\nimport { FaCode } from \"react-icons/fa\";\n//백엔드 정보 가져오려고\nimport axios from \"axios\";\nimport Meta from 'antd/lib/card/Meta';\nimport ImagesSlider from '../../utils/ImagesSlider';\nimport CheckBox from './Sections/CheckBox';\nimport { continents, price } from './Sections/Datas'\nimport Radiobox from './Sections/RadioBox';\nimport SearchFeature from './Sections/SearchFeature';\n\n\nfunction LandingPage() {\n\n    const [Products, setProducts] = useState([])\n    const [Skip, setSkip] = useState(0) // 처음에 0부터\n    const [Limit, setLimit] = useState(8) // 8개씩 보여줄거야 \n    const [PostSize, setPostSize] = useState(0)\n    const [Filters, setFilters] = useState({\n        continents: [],\n        price: []\n    })\n    const [SearchTerm, setSearchTerm] = useState(\"\")\n\n    useEffect(() => {\n\n        let body = {\n            skip: Skip,\n            limit: Limit\n        }\n\n        getProducts(body)\n        \n    }, [])\n\n\n    const getProducts = (body) => {\n        axios.post('/api/product/products', body)\n            .then(response => {\n                if (response.data.success) {\n                    if(body.loadMore){\n                        //더보기 버튼 누르면 그 전에껏도 다 보이게\n                        setProducts([...Products, ...response.data.productInfo ])\n                    } else {\n                        setProducts(response.data.productInfo)\n                    }\n                    setPostSize(response.data.postSize)\n                } else {\n                    alert(\"상품들을 가져오는데 실패했습니다.\")\n                }\n            })\n    }\n\n    const loadMoreHandler = () => {\n        // 더보기를 클릭하면 나머지 중 8개를 가져와야 함! \n\n        let skip = Skip + Limit\n\n        let body = {\n            skip: skip,\n            limit: Limit,\n            loadMore: true,\n            filters: Filters,\n\n        }\n\n        getProducts(body)\n        setSkip(skip) // skip 숫자 업데이트해주는 것\n    }\n\n\n    const renderCards = Products.map((product, index) => {\n\n        return <Col lg={6} md={8} xs={24}  key={index}>\n\n            <Card\n                cover={<a href={`/product/${product._id}`}> <ImagesSlider images={product.images} /></a>}\n            >\n                <Meta\n                    title={product.title}\n                \n                  /*   description={{product.description}.slick} */\n                />\n            </Card>\n        </Col>\n    })\n\n    const  showFilteredResults = (filters) => {\n        \n        let body = {\n            skip: 0, // 새로 누를 때마다 새로 시작에 돼야하기 때문에\n            limit: Limit, \n            filters: filters\n        }\n\n        getProducts(body)\n        setSkip(0)\n    }\n\n    const handlePrice = (value) => {\n        const data = price;\n        let array = [];\n\n        for (let key in data){\n            if(data[key]._id === parseInt(value, 10)) {\n                array = data[key].array;\n                //\"array\" : [0, 199] \n            }\n        }\n        return array;\n    }\n\n    const handleFilters = (filters, category) => {\n        const newFilters = { ...Filters}\n\n        newFilters[category] = filters \n        //continent랑 price를 나타내는 것\n\n        //console.log('filters', filters)\n\n        if(category === \"price\"){\n            let priceValues = handlePrice(filters)\n            newFilters[category] = priceValues\n\n        }\n\n        showFilteredResults(newFilters)\n        setFilters(newFilters)\n    }\n\n    const updateSearchTerm = (newSearchTerm) => {\n\n        let body = {\n            skip: 0,\n            limit: Limit,\n            filters: Filters,\n            searchTerm: newSearchTerm\n        }\n\n        setSkip(0)\n        setSearchTerm(newSearchTerm)\n        getProducts(body)\n    }\n\n   \n    return (\n        <div style={{ width: '75%', margin: '3rem auto' }}>\n            <div style={{ textAlign: 'center' }}>\n                <h2>우리들의 게시물 보기 <Icon type=\"message\" /> </h2>\n            </div>\n\n            {/* Filter */}\n            <Row gutter={[16, 16]}>\n                <Col lg={12} xs={24}>\n                    {/* CheckBox */}\n                    <CheckBox list={continents} handleFilters={filters => handleFilters(filters, \"continents\")} />\n                </Col>\n                <Col lg={12} xs={24}>\n                    {/* RadioBox */}\n                    <Radiobox list={price} handleFilters={filters => handleFilters(filters, \"price\")}/>\n                </Col>\n            </Row>\n\n           \n         \n\n\n            {/* Search */}\n            <div style={{ display:'flex', justifyContent: 'flex-end', margin: '1rem auto'}}>\n                <SearchFeature \n                    refreshFuntion={updateSearchTerm}\n                />\n            </div>\n\n            {/* Cards */}\n\n            {/*Products.map(product)*/}\n\n\n            {<Row gutter={[16, 16]}> \n                {renderCards} \n            </Row>}\n\n            <br />\n            \n           \n            {PostSize >= Limit &&\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    <button onClick={loadMoreHandler}>더보기</button>\n                </div>\n            }\n            \n            \n        </div>\n    )\n}\n\nexport default LandingPage\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}> \n    <Menu.Item key=\"mail\">\n      <a href=\"/writing\">게시글</a>\n    </Menu.Item>\n    <Menu.Item>\n      <a href=\"/\">공고 보기</a>\n    </Menu.Item>\n      <SubMenu title={<span>메뉴</span>}>\n        <Menu.Item key=\"setting:1\">\n          <a href=\"https://haeburney.github.io/MyPetTest/\" target='_blank'>반려동물 테스트</a>\n        </Menu.Item>\n        <Menu.Item key=\"setting:2\">\n          <a href=\"https://haeburney.github.io/tensorflow_test/\" target='_black'>사진으로 검색</a>\n        </Menu.Item>\n        {/* <MenuItemGroup title=\"Item 1\">\n        <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\n        <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\n      </MenuItemGroup>\n      <MenuItemGroup title=\"Item 2\">\n        <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\n        <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\n      </MenuItemGroup> */}\n      </SubMenu>\n  </Menu>\n  )\n}\n\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu, Icon, Badge  } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">Signin</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">Signup</a>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"upload\">\n          <a href=\"/product/upload\">Upload</a>\n        </Menu.Item>\n\n        <Menu.Item key=\"cart\" style={{ paddingBottom: 3 }} >\n          <Badge count={user.userData && user.userData.cart.length}>\n            <a href=\"/user/cart\" className=\"head-example\" style={{marginRight: -22, color:'#667777' }} >\n              <Icon type=\"shopping-cart\" style={{fontSize: 30, marginBottom: 3}} />\n            </a>\n          </Badge>\n        </Menu.Item>\n\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Logout</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);\n\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">Animal Love</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport {Icon} from 'antd';\n\nfunction Footer() {\n    return (\n        <div style={{\n            height: '80px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize:'1rem'\n        }}>\n           <p> Your Animal Loves You  <Icon type=\"heart\" /></p>\n        </div>\n    )\n}\n\nexport default Footer\n","import React, { useState } from 'react'\r\nimport Dropzone from 'react-dropzone';\r\nimport { Icon } from 'antd';\r\nimport Axios from 'axios';\r\n\r\nfunction FileUpload(props) {\r\n\r\n  const [Images, setImages] = useState([]);\r\n  //이미지를 몇개 올릴 수 있게 하기 위해서 배열로 생성\r\n\r\n  const dropHandler = (files) => {\r\n    // 파일을 backend에 전달해줘야 한다.\r\n    // 그리고 파일을 전달 할 때 따로 해줘야 하는게 있다.\r\n\r\n    let formData = new FormData();\r\n\r\n    const config = {\r\n      header: { 'content-type': 'multipart/form-data'}\r\n    };\r\n    formData.append(\"file\", files[0]);\r\n\r\n    Axios.post('/api/product/image', formData, config).then((response) => {\r\n        if (response.data.success){\r\n            setImages([...Images, response.data.filePath])\r\n            props.refreshFunction([...Images, response.data.filePath])\r\n        } else {\r\n            alert('파일을 저장하는데 실패했습니다.')\r\n        }\r\n      });\r\n    // formData와 config를 넣어주지 않으면은 파일을 보낼 때 에러가 발생하게 된다. \r\n  };\r\n\r\n  const deleteHandler = (image) => {\r\n    const currentIndex = Images.indexOf(image)\r\n    let newImages = [...Images]\r\n    newImages.splice(currentIndex, 1)\r\n    setImages(newImages)\r\n    props.refreshFunction(newImages)\r\n  }\r\n\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <Dropzone onDrop={dropHandler}>\r\n              {({ getRootProps, getInputProps }) => (\r\n                  <section>\r\n                      <div\r\n                          style={{\r\n                            width: 300, height: 240, border: '1px solid lightgray',\r\n                            display: 'flex', alignItems: 'center', justifyContent: 'center'\r\n                          }}\r\n                          {...getRootProps()}>\r\n                          <input {...getInputProps()} />\r\n                          <Icon type=\"plus\" style={{ fontSize: '3rem'}} />\r\n                      </div>\r\n                  </section>\r\n              )}\r\n          </Dropzone>\r\n\r\n          <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll'}}>\r\n\r\n            {Images.map((image, index) => (\r\n              <div onClick={()=> deleteHandler(image)} key={index}>\r\n                <img style={{ minWidth: '300px', width: '300px', height: '240px' }}\r\n                  src={`http://localhost:5000/${image}`} \r\n                />\r\n              </div>  \r\n            ))}\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FileUpload\r\n","import { Typography, Button, Form, Input } from 'antd'\r\nimport Axios from 'axios';\r\nimport React, {useState} from 'react'\r\nimport FileUpload from '../../utils/FileUpload';\r\n\r\n//const { Title } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nconst Continents = [\r\n    {key: 1, value: \"실종\"},\r\n    {key: 2, value: \"정보\"},\r\n    {key: 3, value: \"우리들의 이야기\"},\r\n] \r\n\r\n\r\nfunction UploadProductPage(props) {\r\n\r\n    const [Title, setTitle] = useState(\"\")              //제목\r\n    const [Description, setDescription] = useState(\"\")  //설명\r\n    const [Price, setPrice] = useState(0)               //가격\r\n    const [Continent, setContinent] = useState(1)       //장소\r\n    const [Images, setImages] = useState([])             //이미지\r\n\r\n    \r\n    const titleChangeHandler = (event) =>{\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n    \r\n    const descriptionChangeHandler = (event) =>{\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const priceChangeHandler = (event) =>{\r\n        setPrice(event.currentTarget.value)\r\n    }\r\n\r\n    const continentChangeHandler = (event) =>{\r\n        setContinent(event.currentTarget.value)\r\n    }\r\n\r\n    const updateImages = (newImages) => {\r\n        setImages(newImages)\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        /* if(!Title || !Description || !Price || !Continent || !Images){\r\n            return alert(\"모든 값을 넣어주셔야 합니다.\")\r\n        } */\r\n\r\n        if(!Title || !Description ||  !Continent || !Images){\r\n            return alert(\"모든 값을 넣어주셔야 합니다.\")\r\n        }\r\n        \r\n        // 서버에 채운 값들을 request로 보낸다.\r\n\r\n        const body = {\r\n            //로그인 된 사람의 ID\r\n            writer: props.user.userData._id,\r\n            title: Title,\r\n            description: Description,\r\n            price: Price,\r\n            images: Images,\r\n            continents: Continent\r\n        }\r\n\r\n        Axios.post(\"/api/product\", body)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('글쓰기에 성공 했습니다.')\r\n                    props.history.push('/writing')\r\n                } else {\r\n                    alert('글쓰기에 실패 했습니다.')\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n        <div style={{ textAlign: 'center', marginBottom: '2rem'}}>\r\n            <h2>글쓰기</h2>\r\n        </div>\r\n\r\n        <Form onSubmit={submitHandler}>\r\n            \r\n            {/*<Form onSubmitCapture={submitHandler}> */}\r\n\r\n            {/* DropZone */}\r\n\r\n            <FileUpload refreshFunction={updateImages}/>\r\n\r\n            <br />\r\n            <br />\r\n            <label>제목</label>\r\n            <Input onChange={titleChangeHandler} value={Title}/>\r\n            <br />\r\n            <br />\r\n            <label>설명</label>\r\n            <TextArea onChange={descriptionChangeHandler} value={Description} />\r\n            <br />\r\n            <br />\r\n            {/* <label>가격($)</label>\r\n            <Input type=\"number\" onChange={priceChangeHandler} value={Price}/>\r\n            <br />\r\n            <br /> */}\r\n            <label>게시판</label><br />\r\n            <select onChange={continentChangeHandler} value={Continent}>\r\n                {Continents.map(item =>(\r\n                     <option key={item.key} value={item.key}>{item.value}</option>\r\n                ))}\r\n            </select>\r\n            <br />\r\n            <br />\r\n            <Button onClick={submitHandler}>확인</Button>\r\n\r\n        </Form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UploadProductPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport ImageGallery from 'react-image-gallery';\r\n\r\nfunction ProductImage(props) {\r\n\r\n    const [Images, setImages] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(props.detail.images && props.detail.images.length > 0){\r\n            let images = []\r\n\r\n            props.detail.images.map(item => {\r\n                images.push({\r\n                    original: `http://localhost:5000/${item}`,\r\n                    thumbnail: `http://localhost:5000/${item}`\r\n                })\r\n            })\r\n            setImages(images)\r\n        }\r\n\r\n    }, [props.detail])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ImageGallery items={Images} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductImage\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Descriptions } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToCart } from '../../../../_actions/user_actions';\r\nimport { MapMarker, Map } from \"react-kakao-maps-sdk\";\r\nimport './ProductInfo.css' ;\r\n//import  Maps from './Maps';\r\n\r\nfunction ProductInfo(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const clickHandler = () => {\r\n\r\n        // 필요한 정보를 cart 필드에다가 넣어 준다.\r\n        // 필요한 것: 상품에 대한 id, 개수, 날짜 정보\r\n        dispatch(addToCart(props.detail._id))\r\n\r\n\r\n    }\r\n\r\n\r\n    // 지도 여기부터\r\n   /*  const { kakao } = window;\r\n    const [info, setInfo] = useState()\r\n    const [markers, setMarkers] = useState([])\r\n    const [map, setMap] = useState()\r\n\r\n    const animalMap = props.detail.description\r\n    console.log(animalMap)\r\n\r\n    useEffect(() => {\r\n        if (!map) return\r\n        const ps = new kakao.maps.services.Places()\r\n        \r\n\r\n        ps.keywordSearch(\"태민동물병원\", (data, status, _pagination) => {\r\n            if (status === kakao.maps.services.Status.OK) {\r\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n                // LatLngBounds 객체에 좌표를 추가합니다\r\n                const bounds = new kakao.maps.LatLngBounds()\r\n                let markers = []\r\n\r\n                for (var i = 0; i < data.length; i++) {\r\n                    // @ts-ignore\r\n                    markers.push({\r\n                        position: {\r\n                            lat: data[i].y,\r\n                            lng: data[i].x,\r\n                        },\r\n                        content: data[i].place_name,\r\n                    })\r\n                    // @ts-ignore\r\n                    bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x))\r\n                }\r\n                setMarkers(markers)\r\n\r\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n                map.setBounds(bounds)\r\n            }\r\n        })\r\n    }, [map])\r\n */\r\n\r\n    // 지도 여기까지\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Descriptions title=\"글 정보\">\r\n                {/* <Descriptions.Item label=\"공고마감일\">{props.detail.price}</Descriptions.Item>\r\n                <Descriptions.Item label=\"나이\">{props.detail.sold}</Descriptions.Item> */}\r\n                {/* <Descriptions.Item label=\"View\">{props.detail.views}</Descriptions.Item> */}\r\n                \r\n                <Descriptions.Item label=\"설명\">{props.detail.description}</Descriptions.Item>\r\n\r\n            </Descriptions>\r\n\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Button size=\"large\" shpae=\"round\" type=\"danger\" onClick={clickHandler}>\r\n                    찜하기\r\n                </Button>\r\n            </div>\r\n            <br />\r\n            <br />\r\n\r\n           {/*  <Map // 로드뷰를 표시할 Container\r\n                center={{\r\n                    lat: 37.566826,\r\n                    lng: 126.9786567,\r\n                }}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"350px\",\r\n                }}\r\n                level={9}\r\n                onCreate={setMap}\r\n            >\r\n                {markers.map((marker) => (\r\n                    <MapMarker\r\n                        key={`marker-${marker.content}-${marker.position.lat},${marker.position.lng}`}\r\n                        position={marker.position}\r\n                        onClick={() => setInfo(marker)}\r\n                    >\r\n                        {info && info.content === marker.content && (\r\n                            <div style={{ color: \"#000\" }}>{marker.content}</div>\r\n                        )}\r\n                    </MapMarker>\r\n                ))}\r\n            </Map> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductInfo\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport ProductImage from './Sections/ProductImage';\r\nimport ProductInfo from './Sections/ProductInfo';\r\nimport { Row, Col } from 'antd';\r\n\r\nfunction DetailProductPage(props) {\r\n\r\n    const productId = props.match.params.productId\r\n\r\n    const [Product, setProduct] = useState({})\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(`/api/product/products_by_id?id=${productId}&type=single`)\r\n            .then(response => {\r\n                setProduct(response.data[0])\r\n            })\r\n            .catch(err => alert(err))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div style={{ width: '100%', padding: '3rem 4rem' }}>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <h1>{Product.title}</h1>\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <Row gutter={[16, 16]}>\r\n                <Col lg={12} sm={24}>\r\n                    {/* ProductImage */}\r\n                    {/* product의 모든 정보를 property로 내려줄 것이다. */}\r\n                    <ProductImage detail={Product} /> \r\n                </Col>\r\n\r\n\r\n                <Col lg={12} sm={24}>\r\n                    {/* ProductInfo */}\r\n                    <ProductInfo detail={Product} />\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailProductPage\r\n","import React from 'react'\r\nimport \"./UserCardBlock.css\"\r\n\r\nfunction UserCardBlock(props) {\r\n\r\n    const renderCartImage = (images) => {\r\n        if(images.length > 0 ){\r\n            let image = images[0]\r\n            return `http://localhost:5000/${image}`\r\n        }\r\n    }\r\n\r\n  \r\n    const renderItems = () => (\r\n        props.products && props.products.map((product, index)=> (\r\n            <tr key={index}>\r\n                <td>\r\n                    <img style={{ width: '100px' }} alt=\"product\" \r\n                    src={renderCartImage(product.images)} />\r\n                </td>\r\n                <td>{product.title}</td>\r\n               {/*  <td> {product.quantity}  </td>\r\n                <td>   {product.price}   </td> */}\r\n                <td>\r\n                    <button onClick={() => props.removeItem(product._id)}>\r\n                        Remove \r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        ))\r\n    )\r\n  \r\n    return (\r\n         <div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Image</th>\r\n                        <th>Title</th>\r\n                       {/*  <th>Age</th>\r\n                        <th>End Day</th> */}\r\n                        <th>찜 목록에서 삭제</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {renderItems()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCardBlock\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCartItems, removeCartItem } from '../../../_actions/user_actions';\r\nimport UserCardBlock from './Sections/UserCardBlock';\r\nimport { Empty } from 'antd';\r\n\r\nfunction CartPage(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [Total, setTotal] = useState(0)\r\n    const [ShowTotal, setShowTotal] = useState(false)\r\n    // true 일 때만 가격을 보여줄 예정\r\n\r\n    useEffect(() => {\r\n        //const dispatch = useDispatch();\r\n\r\n        let cartItems=[]\r\n\r\n        // 리덕스 User state안에 cart 안에 상품이 들어있는지 확인 \r\n        if(props.user.userData && props.user.userData.cart) {\r\n            if(props.user.userData.cart.length > 0) {\r\n                props.user.userData.cart.forEach(item => {\r\n                    cartItems.push(item.id)\r\n                })\r\n\r\n                dispatch(getCartItems(cartItems, props.user.userData.cart))\r\n                    .then(response => {calculateTotal(response.payload)})\r\n            }\r\n        }\r\n    }, [props.user.userData])\r\n\r\n\r\n    let calculateTotal = (cartDetail) => {\r\n        let total = 0;\r\n\r\n        cartDetail.map(item => {\r\n            total += parseInt(item.price, 10) * item.quantity\r\n        });\r\n\r\n        setTotal(total)\r\n        setShowTotal(true)\r\n    }\r\n\r\n    let removeFromCart = (productId) => {\r\n        dispatch(removeCartItem(productId))\r\n            .then(response => {\r\n                if(response.payload.productInfo.length <= 0){\r\n                    setShowTotal(false)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ width: '85%', margin: '3rem auto'}}>\r\n            <h1>찜 목록</h1>\r\n\r\n            <div>\r\n                <UserCardBlock products={props.user.cartDetail} removeItem={removeFromCart} />\r\n            </div>\r\n\r\n            {ShowTotal ?\r\n                <div style={{ marginTop: '3rem' }}>\r\n                    {/*<h2>Total Amount: ${Total}</h2>*/}\r\n                </div>\r\n                :\r\n                <>\r\n                    <br />\r\n                    <Empty description={false} />\r\n                </>\r\n            }\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartPage\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Information from './Information';\r\n\r\nfunction Adetail() {\r\n    const { id } = useParams();\r\n    const [detail, setDetail] = useState([]);\r\n\r\n    const [animal, setAnimal] = useState([]);\r\n    const getAnimals = async () => {\r\n        const json = await (\r\n            await fetch(\r\n                `http://apis.data.go.kr/1543061/abandonmentPublicSrvc/abandonmentPublic?bgnde=20220101&endde=20221130&pageNo=1&numOfRows=999&_type=json&serviceKey=7LL6m%2F9hLy1EGblVbDDPEBNdFCl6m9Ft%2Fmw2b5wuTaAq2IuINWejMUw46typtDua4NacB9UfALipcKcnoK4PJw%3D%3D`\r\n            )).json();\r\n        setAnimal(json.response.body.items.item);\r\n        console.log(json.response.body.items.item.age);\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getAnimals();\r\n    }, [])\r\n\r\n    console.log(id)\r\n    return (\r\n        <div>\r\n            \r\n            {animal.map((animal, index) =>\r\n                \r\n\r\n                <li key={index}>\r\n                    <img src={animal.filename} />\r\n                    {animal.kindCd}  {animal.colorCd}\r\n                </li>)}\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Adetail\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport Adetail from './Adetail';\r\nimport styles from \"./Information.module.css\";\r\nimport { MapMarker, Map } from \"react-kakao-maps-sdk\";\r\n\r\n/* export function onClick({ kindCd }){\r\n    return (\r\n    <div>{kindCd}</div>\r\n    )\r\n} */\r\n\r\n\r\nfunction Information({ id, img, kindCd, age, Edt, orgNm,  noticeNo, careNm, happenDt, neuterYn, state, sexCd, careTel, special, weight, careAddr }) {\r\n    const [add, setAdd] = useState(false);\r\n   // 지도\r\n   const { kakao } = window;\r\n   const [info, setInfo] = useState()\r\n   const [markers, setMarkers] = useState([])\r\n   const [map, setMap] = useState()\r\n \r\n   useEffect(() => {\r\n     if (!map) return\r\n     const ps = new kakao.maps.services.Places()\r\n \r\n     ps.keywordSearch(careNm, (data, status, _pagination) => {\r\n       if (status === kakao.maps.services.Status.OK) {\r\n         // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n         // LatLngBounds 객체에 좌표를 추가합니다\r\n         const bounds = new kakao.maps.LatLngBounds()\r\n         let markers = []\r\n \r\n         for (var i = 0; i < data.length; i++) {\r\n           // @ts-ignore\r\n           markers.push({\r\n             position: {\r\n               lat: data[i].y,\r\n               lng: data[i].x,\r\n             },\r\n             content: data[i].place_name,\r\n           })\r\n           // @ts-ignore\r\n           bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x))\r\n         }\r\n         setMarkers(markers)\r\n \r\n         // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n         map.setBounds(bounds)\r\n       }\r\n     })\r\n   }, [map])\r\n \r\n   /* return (\r\n     <Map // 로드뷰를 표시할 Container\r\n       center={{\r\n         lat: 37.566826,\r\n         lng: 126.9786567,\r\n       }}\r\n       style={{\r\n         width: \"100%\",\r\n         height: \"350px\",\r\n       }}\r\n       level={3}\r\n       onCreate={setMap}\r\n     >\r\n       {markers.map((marker) => (\r\n         <MapMarker\r\n           key={`marker-${marker.content}-${marker.position.lat},${marker.position.lng}`}\r\n           position={marker.position}\r\n           onClick={() => setInfo(marker)}\r\n         >\r\n           {info &&info.content === marker.content && (\r\n             <div style={{color:\"#000\"}}>{marker.content}</div>\r\n           )}\r\n         </MapMarker>\r\n       ))}\r\n     </Map> */\r\n\r\n   // 지도\r\n\r\n\r\n    return (\r\n        <div className={styles.animal}>\r\n            <img src={img} alt={id} className={styles.animal__img}/> \r\n           {/*  <div>\r\n                <Link to={`/animal/${id}`} >\r\n                    <img src={img} alt={id} /> \r\n                </Link>\r\n            </div> */}\r\n            <p>\r\n                <div className={styles.info}>\r\n                {kindCd} &nbsp; / 성별 : {sexCd} \r\n                </div>\r\n                <br />\r\n                나이 : {age}   <br />\r\n                몸무게 : {weight} <br /> \r\n                공고 종료일 : {Edt}   <br />\r\n                보호 센터 : {careNm} <br /><br /> \r\n                <div onClick={() => setAdd(!add)} className={styles.add} >\r\n                    {(add ?\r\n                        <div>\r\n                            현재 상태 : {state}  <br />\r\n                            공고 번호 : {noticeNo} <br />\r\n                            발견 날짜 : {happenDt} <br />\r\n                            중성화 여부 : {neuterYn} <br />\r\n                            전화 번호 : {careTel} <br />\r\n                            특이사항 : {special} <br />\r\n                            <Map // 로드뷰를 표시할 Container\r\n                                center={{\r\n                                    lat: 37.566826,\r\n                                    lng: 126.9786567,\r\n                                }}\r\n                                style={{\r\n                                    width: \"100%\",\r\n                                    height: \"350px\",\r\n                                }}\r\n                                level={3}\r\n                                onCreate={setMap}\r\n                            >\r\n                                {markers.map((marker) => (\r\n                                    <MapMarker\r\n                                        key={`marker-${marker.content}-${marker.position.lat},${marker.position.lng}`}\r\n                                        position={marker.position}\r\n                                        onClick={() => setInfo(marker)}\r\n                                    >\r\n                                        {info && info.content === marker.content && (\r\n                                            <div style={{ color: \"#000\" }}>{marker.content}</div>\r\n                                        )}\r\n                                    </MapMarker>\r\n                                ))}\r\n                            </Map><br />\r\n                            <button className={styles.button}>닫기</button>\r\n                        </div>\r\n                        :\r\n                        <button className={styles.button}>자세히</button>)}\r\n                </div>\r\n\r\n            </p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nInformation.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    img: PropTypes.string.isRequired,\r\n    kindCd: PropTypes.string.isRequired,\r\n    age: PropTypes.string.isRequired,\r\n    Edt: PropTypes.string.isRequired,\r\n    orgNm: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Information;\r\n\r\n/* id : desertionNo 아이디 img 사진 kindCd 개종류 age 나이 Edt 공고종료일  \r\norgNm 장소  noticeNo 번호 careNm 보호소 이름  happenDt 발견날짜 \r\nneuterYn 중성화여부 state 상태  sexCd 성  careTel  보호소? 전번 */","import React, {useEffect, useState} from 'react';\r\nimport Information from \"./Information\";\r\nimport styles from \"./Animals.module.css\";\r\n\r\nfunction Animals() {\r\n    const [loading, setLoading] = useState(true);\r\n    const [animal, setAnimal] = useState([]);\r\n    const getAnimals = async() => {\r\n        const json = await (\r\n            await fetch(\r\n                /* `http://apis.data.go.kr/1543061/abandonmentPublicSrvc/abandonmentPublic?bgnde=20220101&endde=20221130&pageNo=1&numOfRows=999&_type=json&serviceKey=7LL6m%2F9hLy1EGblVbDDPEBNdFCl6m9Ft%2Fmw2b5wuTaAq2IuINWejMUw46typtDua4NacB9UfALipcKcnoK4PJw%3D%3D`\r\n                 */\r\n                `http://apis.data.go.kr/1543061/abandonmentPublicSrvc/abandonmentPublic?bgnde=20220101&endde=20221130&pageNo=1&numOfRows=500&_type=json&serviceKey=7LL6m%2F9hLy1EGblVbDDPEBNdFCl6m9Ft%2Fmw2b5wuTaAq2IuINWejMUw46typtDua4NacB9UfALipcKcnoK4PJw%3D%3D`\r\n            )).json();\r\n        setAnimal(json.response.body.items.item);\r\n        setLoading(false);\r\n            }\r\n    useEffect(()=>{\r\n       getAnimals();\r\n    }, []) \r\n    console.log(animal);\r\n    return (\r\n        <div className={styles.container}>\r\n            {loading ? (\r\n                <div className={styles.loader}>\r\n                    <span>Loading...</span>\r\n                </div>) : (\r\n                <div className={styles.animals}>{animal.map(animal => (\r\n                    <Information key={animal.desertionNo}\r\n                        id={animal.desertionNo}\r\n                        img={animal.popfile}\r\n                        kindCd={animal.kindCd}\r\n                        age={animal.age}\r\n                        Edt={animal.noticeEdt}\r\n                        \r\n                        noticeNo={animal.noticeNo}\r\n                        orgNm={animal.orgNm}\r\n                        careNm={animal.careNm}\r\n                        careTel={animal.careTel}\r\n                        happenDt={animal.happenDt}\r\n                        neuterYn={animal.neuterYn}\r\n                        state={animal.processState}\r\n                        sexCd={animal.sexCd}\r\n                        special={animal.specialMark}\r\n                        weight={animal.weight}\r\n                        careAddr={animal.careAddr}\r\n                    />\r\n                )\r\n                )}</div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n{/* <div key={animal.desertionNo} id={animal.desertionNo}>\r\n                        <Link to={`/Adetail/${animal.desertionNo}`}>\r\n                        <img src={animal.popfile} /></Link>\r\n                        {animal.kindCd}\r\n                        {animal.age}\r\n                        {animal.noticeEdt}\r\n                        {animal.orgNm}\r\n                        {animal.desertionNo}\r\n                        <br />\r\n                        </div> */}\r\n\r\nexport default Animals;\r\n\r\n/*\r\nid,kindCd,age,Edt,orgNm \r\n\r\n noticeNo, careNm, orgNm, happenDt, neuterYn, state, sexCd, careTel\r\n*/","import React, { Suspense } from 'react';\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\"\nimport UploadProductPage from \"./views/UploadProductPage/UploadProductPage.js\";\nimport DetailProductPage from './views/DetailProductPage/DetailProductPage';\nimport CartPage from './views/CartPage/CartPage';\nimport Animals from './views/Animal/Animals';\nimport Adetail from './views/Animal/Adetail';\n\n\n//null   Anyone Can go inside\n//true   only logged in user can go inside\n//false  logged in user can't go inside\n\nfunction App() {\n  return (\n\n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route exact path=\"/writing\" component={Auth(LandingPage, null)} />\n            <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n            <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n            <Route exact path=\"/product/upload\" component={Auth(UploadProductPage, true)} />\n            <Route exact path=\"/product/:productId\" component={Auth(DetailProductPage, null)} />\n            <Route exact path=\"/user/cart\" component={Auth(CartPage, true)} />\n            <Route exact path=\"/\" component={Auth(Animals, null)} />\n            <Route exact path=\"/animal/:id\" component={Auth(Adetail, false)} />\n\n          </Switch>\n        </BrowserRouter>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_CART,\n    GET_CART_ITEMS,\n    REMOVE_CART_ITEM\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch (action.type) {\n        case REGISTER_USER:\n            return { ...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return { ...state, userData: action.payload }\n        case LOGOUT_USER:\n            return { ...state }\n        case ADD_TO_CART:\n            return {\n                ...state, userData: {\n                    ...state.userData,\n                    cart: action.payload\n                }\n            }\n        case GET_CART_ITEMS:\n            return { ...state, cartDetail: action.payload }\n        case REMOVE_CART_ITEM:\n            return {\n                ...state, cartDetail: action.payload.productInfo,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload.cart\n                }\n            }    \n        default:\n            return state;\n    }\n}","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"animal\":\"Information_animal__2osrx\",\"button\":\"Information_button__3CyE6\",\"info\":\"Information_info__3ydz7\",\"animal__img\":\"Information_animal__img__MPkue\",\"sexCd\":\"Information_sexCd__1sNIe\",\"movie__title\":\"Information_movie__title__2t3Tn\",\"movie__year\":\"Information_movie__year__2U3OQ\",\"movie__genres\":\"Information_movie__genres__2ZmUo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Animals_container__1k-S4\",\"loader\":\"Animals_loader__1fliP\",\"animals\":\"Animals_animals__2DoKF\"};"],"sourceRoot":""}